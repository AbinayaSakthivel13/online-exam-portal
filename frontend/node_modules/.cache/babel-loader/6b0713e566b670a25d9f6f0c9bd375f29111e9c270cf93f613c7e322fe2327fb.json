{"ast":null,"code":"var _jsxFileName = \"D:\\\\online-exam-system\\\\frontend\\\\src\\\\pages\\\\CreateExam.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateExam = ({\n  state,\n  setState,\n  user\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [duration, setDuration] = useState(30); // default 30 min\n  const [selected, setSelected] = useState([]);\n  const navigate = useNavigate();\n\n  // Toggle question selection\n  const toggleSelect = id => {\n    if (selected.includes(id)) {\n      setSelected(selected.filter(qId => qId !== id));\n    } else {\n      setSelected([...selected, id]);\n    }\n  };\n  const create = async () => {\n    if (!name.trim()) {\n      alert(\"Please enter exam name\");\n      return;\n    }\n    if (selected.length === 0) {\n      alert(\"Please select at least one question\");\n      return;\n    }\n    const totalMarks = selected.reduce((sum, qId) => {\n      const question = state.questions.find(q => q.id === qId || q.question_id === qId);\n      return sum + ((question === null || question === void 0 ? void 0 : question.marks) || 0);\n    }, 0);\n    const token = localStorage.getItem(\"token\");\n    try {\n      const res = await fetch(\"http://localhost:5000/api/exams\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          exam_name: name.trim(),\n          exam_date: new Date().toISOString().split(\"T\")[0],\n          duration: Number(duration),\n          total_marks: totalMarks,\n          created_by: user === null || user === void 0 ? void 0 : user.id\n        })\n      });\n      const newExam = await res.json();\n\n      // Add questionIds locally for frontend tracking\n      newExam.questionIds = selected;\n      newExam.thumbnail = \"/assets/exam-default.png\";\n      newExam.description = \"Custom exam created by admin\";\n      setState({\n        ...state,\n        exams: [...state.exams, newExam]\n      });\n      alert(\"Exam created successfully!\");\n\n      // Reset form\n      setName(\"\");\n      setDuration(30);\n      setSelected([]);\n      navigate(\"/admin/dashboard\");\n    } catch (err) {\n      console.error(\"Failed to create exam:\", err);\n      alert(\"Error creating exam. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-exam\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Exam Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Duration (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: duration,\n        onChange: e => setDuration(e.target.value),\n        min: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: state.questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${selected.includes(q.id || q.question_id) ? \"selected\" : \"\"}`,\n          onClick: () => toggleSelect(q.id || q.question_id),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: q.text || q.question_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Marks: \", q.marks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, q.id || q.question_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: create,\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 12px; margin-top: 12px; }\n        .card { padding: 12px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; transition: all 0.2s; }\n        .card:hover { box-shadow: 0 0 6px rgba(0,0,0,0.2); }\n        .card.selected { border-color: #007bff; background: #e6f0ff; }\n        input { margin: 4px 0 12px 0; padding: 6px; width: 100%; max-width: 300px; }\n        button { padding: 8px 16px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }\n        button:hover { background: #0056b3; }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateExam, \"+sOb2RRVyTXP9FG7Chh/7rwb0sI=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateExam;\nexport default CreateExam;\nvar _c;\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateExam","state","setState","user","_s","name","setName","duration","setDuration","selected","setSelected","navigate","toggleSelect","id","includes","filter","qId","create","trim","alert","length","totalMarks","reduce","sum","question","questions","find","q","question_id","marks","token","localStorage","getItem","res","fetch","method","headers","Authorization","body","JSON","stringify","exam_name","exam_date","Date","toISOString","split","Number","total_marks","created_by","newExam","json","questionIds","thumbnail","description","exams","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","min","map","onClick","text","question_text","_c","$RefreshReg$"],"sources":["D:/online-exam-system/frontend/src/pages/CreateExam.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CreateExam = ({ state, setState, user }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [duration, setDuration] = useState(30); // default 30 min\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Toggle question selection\r\n  const toggleSelect = (id) => {\r\n    if (selected.includes(id)) {\r\n      setSelected(selected.filter((qId) => qId !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const create = async () => {\r\n    if (!name.trim()) {\r\n      alert(\"Please enter exam name\");\r\n      return;\r\n    }\r\n    if (selected.length === 0) {\r\n      alert(\"Please select at least one question\");\r\n      return;\r\n    }\r\n\r\n    const totalMarks = selected.reduce((sum, qId) => {\r\n      const question = state.questions.find((q) => q.id === qId || q.question_id === qId);\r\n      return sum + (question?.marks || 0);\r\n    }, 0);\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/exams\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          exam_name: name.trim(),\r\n          exam_date: new Date().toISOString().split(\"T\")[0],\r\n          duration: Number(duration),\r\n          total_marks: totalMarks,\r\n          created_by: user?.id,\r\n        }),\r\n      });\r\n\r\n      const newExam = await res.json();\r\n\r\n      // Add questionIds locally for frontend tracking\r\n      newExam.questionIds = selected;\r\n      newExam.thumbnail = \"/assets/exam-default.png\";\r\n      newExam.description = \"Custom exam created by admin\";\r\n\r\n      setState({ ...state, exams: [...state.exams, newExam] });\r\n      alert(\"Exam created successfully!\");\r\n\r\n      // Reset form\r\n      setName(\"\");\r\n      setDuration(30);\r\n      setSelected([]);\r\n      navigate(\"/admin/dashboard\");\r\n    } catch (err) {\r\n      console.error(\"Failed to create exam:\", err);\r\n      alert(\"Error creating exam. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-exam\">\r\n      <h2>Create Exam</h2>\r\n      <div>\r\n        <label>Exam Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Duration (minutes):</label>\r\n        <input\r\n          type=\"number\"\r\n          value={duration}\r\n          onChange={(e) => setDuration(e.target.value)}\r\n          min={5}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Select Questions:</h3>\r\n        <div className=\"grid\">\r\n          {state.questions.map((q) => (\r\n            <div\r\n              key={q.id || q.question_id}\r\n              className={`card ${selected.includes(q.id || q.question_id) ? \"selected\" : \"\"}`}\r\n              onClick={() => toggleSelect(q.id || q.question_id)}\r\n            >\r\n              <p>{q.text || q.question_text}</p>\r\n              <small>Marks: {q.marks}</small>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={create}>Create Exam</button>\r\n\r\n      <style>{`\r\n        .grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 12px; margin-top: 12px; }\r\n        .card { padding: 12px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; transition: all 0.2s; }\r\n        .card:hover { box-shadow: 0 0 6px rgba(0,0,0,0.2); }\r\n        .card.selected { border-color: #007bff; background: #e6f0ff; }\r\n        input { margin: 4px 0 12px 0; padding: 6px; width: 100%; max-width: 300px; }\r\n        button { padding: 8px 16px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }\r\n        button:hover { background: #0056b3; }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateExam;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMe,YAAY,GAAIC,EAAE,IAAK;IAC3B,IAAIJ,QAAQ,CAACK,QAAQ,CAACD,EAAE,CAAC,EAAE;MACzBH,WAAW,CAACD,QAAQ,CAACM,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKH,EAAE,CAAC,CAAC;IACnD,CAAC,MAAM;MACLH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEI,EAAE,CAAC,CAAC;IAChC;EACF,CAAC;EAED,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAC,CAAC,EAAE;MAChBC,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IACA,IAAIV,QAAQ,CAACW,MAAM,KAAK,CAAC,EAAE;MACzBD,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACF;IAEA,MAAME,UAAU,GAAGZ,QAAQ,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEP,GAAG,KAAK;MAC/C,MAAMQ,QAAQ,GAAGvB,KAAK,CAACwB,SAAS,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACd,EAAE,KAAKG,GAAG,IAAIW,CAAC,CAACC,WAAW,KAAKZ,GAAG,CAAC;MACnF,OAAOO,GAAG,IAAI,CAAAC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,KAAK,KAAI,CAAC,CAAC;IACrC,CAAC,EAAE,CAAC,CAAC;IAEL,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUP,KAAK;QAChC,CAAC;QACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,SAAS,EAAEpC,IAAI,CAACa,IAAI,CAAC,CAAC;UACtBwB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACjDtC,QAAQ,EAAEuC,MAAM,CAACvC,QAAQ,CAAC;UAC1BwC,WAAW,EAAE1B,UAAU;UACvB2B,UAAU,EAAE7C,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;QACpB,CAAC;MACH,CAAC,CAAC;MAEF,MAAMoC,OAAO,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,CAAC;;MAEhC;MACAD,OAAO,CAACE,WAAW,GAAG1C,QAAQ;MAC9BwC,OAAO,CAACG,SAAS,GAAG,0BAA0B;MAC9CH,OAAO,CAACI,WAAW,GAAG,8BAA8B;MAEpDnD,QAAQ,CAAC;QAAE,GAAGD,KAAK;QAAEqD,KAAK,EAAE,CAAC,GAAGrD,KAAK,CAACqD,KAAK,EAAEL,OAAO;MAAE,CAAC,CAAC;MACxD9B,KAAK,CAAC,4BAA4B,CAAC;;MAEnC;MACAb,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MACfC,QAAQ,CAAC,kBAAkB,CAAC;IAC9B,CAAC,CAAC,OAAO4C,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC5CpC,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAK2D,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B5D,OAAA;MAAA4D,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBhE,OAAA;MAAA4D,QAAA,gBACE5D,OAAA;QAAA4D,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBhE,OAAA;QACEiE,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE5D,IAAK;QACZ6D,QAAQ,EAAGC,CAAC,IAAK7D,OAAO,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhE,OAAA;MAAA4D,QAAA,gBACE5D,OAAA;QAAA4D,QAAA,EAAO;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClChE,OAAA;QACEiE,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAE1D,QAAS;QAChB2D,QAAQ,EAAGC,CAAC,IAAK3D,WAAW,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,GAAG,EAAE;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENhE,OAAA;MAAA4D,QAAA,gBACE5D,OAAA;QAAA4D,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BhE,OAAA;QAAK2D,SAAS,EAAC,MAAM;QAAAC,QAAA,EAClB1D,KAAK,CAACwB,SAAS,CAAC6C,GAAG,CAAE3C,CAAC,iBACrB5B,OAAA;UAEE2D,SAAS,EAAE,QAAQjD,QAAQ,CAACK,QAAQ,CAACa,CAAC,CAACd,EAAE,IAAIc,CAAC,CAACC,WAAW,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;UAChF2C,OAAO,EAAEA,CAAA,KAAM3D,YAAY,CAACe,CAAC,CAACd,EAAE,IAAIc,CAAC,CAACC,WAAW,CAAE;UAAA+B,QAAA,gBAEnD5D,OAAA;YAAA4D,QAAA,EAAIhC,CAAC,CAAC6C,IAAI,IAAI7C,CAAC,CAAC8C;UAAa;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClChE,OAAA;YAAA4D,QAAA,GAAO,SAAO,EAAChC,CAAC,CAACE,KAAK;UAAA;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAL1BpC,CAAC,CAACd,EAAE,IAAIc,CAAC,CAACC,WAAW;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMvB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENhE,OAAA;MAAQwE,OAAO,EAAEtD,MAAO;MAAA0C,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7ChE,OAAA;MAAA4D,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC3D,EAAA,CAxHIJ,UAAU;EAAA,QAKGH,WAAW;AAAA;AAAA6E,EAAA,GALxB1E,UAAU;AA0HhB,eAAeA,UAAU;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}