{"ast":null,"code":"const BASE_URL = \"http://localhost:5000/api\";\n\n// Login for admin or student\nexport async function login(role, credentials) {\n  const endpoint = role === \"admin\" ? \"auth/admin/login\" : \"auth/student/login\";\n  const res = await fetch(`${BASE_URL}/${endpoint}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  });\n  return res.json();\n}\n\n// Register student with only username and password\nexport async function registerUser(username, password) {\n  const res = await fetch(`${BASE_URL}/auth/student/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  return res.json();\n}\n\n// Fetch exams\nexport async function fetchExams() {\n  const res = await fetch(`${BASE_URL}/exams`);\n  return res.json();\n}\n\n// Fetch questions\nexport async function fetchQuestions() {\n  const res = await fetch(`${BASE_URL}/questions`);\n  return res.json();\n}\n\n// Submit exam answers\nexport async function submitExam(studentId, examId, answers, token) {\n  const res = await fetch(`${BASE_URL}/responses`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      student_id: studentId,\n      exam_id: examId,\n      answers\n    })\n  });\n  return res.json();\n}\n\n// Fetch results\nexport async function fetchResults(token) {\n  const res = await fetch(`${BASE_URL}/results`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  return res.json();\n}","map":{"version":3,"names":["BASE_URL","login","role","credentials","endpoint","res","fetch","method","headers","body","JSON","stringify","json","registerUser","username","password","fetchExams","fetchQuestions","submitExam","studentId","examId","answers","token","student_id","exam_id","fetchResults"],"sources":["D:/online-exam-system/frontend/src/services/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:5000/api\";\r\n\r\n// Login for admin or student\r\nexport async function login(role, credentials) {\r\n  const endpoint = role === \"admin\" ? \"auth/admin/login\" : \"auth/student/login\";\r\n  const res = await fetch(`${BASE_URL}/${endpoint}`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n  return res.json();\r\n}\r\n\r\n// Register student with only username and password\r\nexport async function registerUser(username, password) {\r\n  const res = await fetch(`${BASE_URL}/auth/student/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n  return res.json();\r\n}\r\n\r\n// Fetch exams\r\nexport async function fetchExams() {\r\n  const res = await fetch(`${BASE_URL}/exams`);\r\n  return res.json();\r\n}\r\n\r\n// Fetch questions\r\nexport async function fetchQuestions() {\r\n  const res = await fetch(`${BASE_URL}/questions`);\r\n  return res.json();\r\n}\r\n\r\n// Submit exam answers\r\nexport async function submitExam(studentId, examId, answers, token) {\r\n  const res = await fetch(`${BASE_URL}/responses`, {\r\n    method: \"POST\",\r\n    headers: { \r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ student_id: studentId, exam_id: examId, answers }),\r\n  });\r\n  return res.json();\r\n}\r\n\r\n// Fetch results\r\nexport async function fetchResults(token) {\r\n  const res = await fetch(`${BASE_URL}/results`, {\r\n    headers: { \"Authorization\": `Bearer ${token}` }\r\n  });\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;;AAE5C;AACA,OAAO,eAAeC,KAAKA,CAACC,IAAI,EAAEC,WAAW,EAAE;EAC7C,MAAMC,QAAQ,GAAGF,IAAI,KAAK,OAAO,GAAG,kBAAkB,GAAG,oBAAoB;EAC7E,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,IAAII,QAAQ,EAAE,EAAE;IACjDG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;EAClC,CAAC,CAAC;EACF,OAAOE,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeC,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACrD,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,wBAAwB,EAAE;IAC3DO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOV,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeI,UAAUA,CAAA,EAAG;EACjC,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,QAAQ,CAAC;EAC5C,OAAOK,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeK,cAAcA,CAAA,EAAG;EACrC,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,YAAY,CAAC;EAChD,OAAOK,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeM,UAAUA,CAACC,SAAS,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAE;EAClE,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,YAAY,EAAE;IAC/CO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUc,KAAK;IAClC,CAAC;IACDb,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEY,UAAU,EAAEJ,SAAS;MAAEK,OAAO,EAAEJ,MAAM;MAAEC;IAAQ,CAAC;EAC1E,CAAC,CAAC;EACF,OAAOhB,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAea,YAAYA,CAACH,KAAK,EAAE;EACxC,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,UAAU,EAAE;IAC7CQ,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUc,KAAK;IAAG;EAChD,CAAC,CAAC;EACF,OAAOjB,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}