{"ast":null,"code":"var _jsxFileName = \"D:\\\\online-exam-system\\\\frontend\\\\src\\\\pages\\\\CreateExam.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateExam = ({\n  state,\n  setState\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [duration, setDuration] = useState(30); // default 30 min\n  const [selected, setSelected] = useState([]);\n  const navigate = useNavigate();\n\n  // Toggle question selection\n  const toggleSelect = id => {\n    if (selected.includes(id)) {\n      setSelected(selected.filter(qId => qId !== id));\n    } else {\n      setSelected([...selected, id]);\n    }\n  };\n  const create = () => {\n    if (!name.trim()) {\n      alert(\"Please enter exam name\");\n      return;\n    }\n    if (selected.length === 0) {\n      alert(\"Please select at least one question\");\n      return;\n    }\n    const totalMarks = selected.reduce((sum, qId) => {\n      const question = state.questions.find(q => q.id === qId);\n      return sum + ((question === null || question === void 0 ? void 0 : question.marks) || 0);\n    }, 0);\n    const newExam = {\n      id: `e_${Date.now()}`,\n      name: name.trim(),\n      date: new Date().toISOString(),\n      durationMin: Number(duration),\n      totalMarks: totalMarks,\n      questionIds: selected,\n      thumbnail: \"/assets/exam-default.png\",\n      // make sure this image exists in public/assets\n      description: \"Custom exam created by admin\"\n    };\n    setState({\n      ...state,\n      exams: [...state.exams, newExam]\n    });\n    alert(\"Exam created successfully!\");\n    // reset form\n    setName(\"\");\n    setDuration(30);\n    setSelected([]);\n    navigate(\"/admin/exams\"); // optional: navigate back to exams list\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-exam\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Exam Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Duration (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: duration,\n        onChange: e => setDuration(e.target.value),\n        min: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: state.questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${selected.includes(q.id) ? \"selected\" : \"\"}`,\n          onClick: () => toggleSelect(q.id),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: q.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Marks: \", q.marks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, q.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: create,\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 12px; margin-top: 12px; }\n        .card { padding: 12px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; transition: all 0.2s; }\n        .card:hover { box-shadow: 0 0 6px rgba(0,0,0,0.2); }\n        .card.selected { border-color: #007bff; background: #e6f0ff; }\n        input { margin: 4px 0 12px 0; padding: 6px; width: 100%; max-width: 300px; }\n        button { padding: 8px 16px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }\n        button:hover { background: #0056b3; }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateExam, \"+sOb2RRVyTXP9FG7Chh/7rwb0sI=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateExam;\nexport default CreateExam;\nvar _c;\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateExam","state","setState","_s","name","setName","duration","setDuration","selected","setSelected","navigate","toggleSelect","id","includes","filter","qId","create","trim","alert","length","totalMarks","reduce","sum","question","questions","find","q","marks","newExam","Date","now","date","toISOString","durationMin","Number","questionIds","thumbnail","description","exams","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","min","map","onClick","text","_c","$RefreshReg$"],"sources":["D:/online-exam-system/frontend/src/pages/CreateExam.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CreateExam = ({ state, setState }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [duration, setDuration] = useState(30); // default 30 min\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Toggle question selection\r\n  const toggleSelect = (id) => {\r\n    if (selected.includes(id)) {\r\n      setSelected(selected.filter((qId) => qId !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const create = () => {\r\n    if (!name.trim()) {\r\n      alert(\"Please enter exam name\");\r\n      return;\r\n    }\r\n    if (selected.length === 0) {\r\n      alert(\"Please select at least one question\");\r\n      return;\r\n    }\r\n\r\n    const totalMarks = selected.reduce((sum, qId) => {\r\n      const question = state.questions.find((q) => q.id === qId);\r\n      return sum + (question?.marks || 0);\r\n    }, 0);\r\n\r\n    const newExam = {\r\n      id: `e_${Date.now()}`,\r\n      name: name.trim(),\r\n      date: new Date().toISOString(),\r\n      durationMin: Number(duration),\r\n      totalMarks: totalMarks,\r\n      questionIds: selected,\r\n      thumbnail: \"/assets/exam-default.png\", // make sure this image exists in public/assets\r\n      description: \"Custom exam created by admin\",\r\n    };\r\n\r\n    setState({ ...state, exams: [...state.exams, newExam] });\r\n    alert(\"Exam created successfully!\");\r\n    // reset form\r\n    setName(\"\");\r\n    setDuration(30);\r\n    setSelected([]);\r\n    navigate(\"/admin/exams\"); // optional: navigate back to exams list\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-exam\">\r\n      <h2>Create Exam</h2>\r\n      <div>\r\n        <label>Exam Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Duration (minutes):</label>\r\n        <input\r\n          type=\"number\"\r\n          value={duration}\r\n          onChange={(e) => setDuration(e.target.value)}\r\n          min={5}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Select Questions:</h3>\r\n        <div className=\"grid\">\r\n          {state.questions.map((q) => (\r\n            <div\r\n              key={q.id}\r\n              className={`card ${selected.includes(q.id) ? \"selected\" : \"\"}`}\r\n              onClick={() => toggleSelect(q.id)}\r\n            >\r\n              <p>{q.text}</p>\r\n              <small>Marks: {q.marks}</small>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={create}>Create Exam</button>\r\n\r\n      <style>{`\r\n        .grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 12px; margin-top: 12px; }\r\n        .card { padding: 12px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; transition: all 0.2s; }\r\n        .card:hover { box-shadow: 0 0 6px rgba(0,0,0,0.2); }\r\n        .card.selected { border-color: #007bff; background: #e6f0ff; }\r\n        input { margin: 4px 0 12px 0; padding: 6px; width: 100%; max-width: 300px; }\r\n        button { padding: 8px 16px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }\r\n        button:hover { background: #0056b3; }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateExam;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}